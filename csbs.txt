1)
INPUT:
#include <stdio.h>
int main() 
{
  int size, i;
  float num[100], sum = 0.0, avg;

  printf("Enter the size of the array: ");
  scanf("%d", &size);

  while (size < 2) 
  {
    printf("You need at least two elements to calculate average\n");
    printf("Enter the size of the array again: ");
    scanf("%d", &size);
  }
  for (i = 0; i < size; ++i) 
  {
    printf("Enter number %d: ", i + 1);
    scanf("%f", &num[i]);
    sum += num[i];
  }
  avg = sum / size;
  printf("Average of array elements: %.2f", avg);
  return 0;
}

OUTPUT:
Enter the size of the array: 6
Enter number 1: 4
Enter number 2: 6
Enter number 3: 7
Enter number 4: 8
Enter number 5: 11
Enter number 6: 12
Average of array elements: 8.00

2)
INPUT:
#include <stdio.h>
int main()
{
    int size, i, largest;
    printf("\n Enter the size of the array: ");
    scanf("%d", &size);
    int array[size];  
    printf("\n Enter %d elements of the array: \n", size);
    for (i = 0; i < size; i++)
    {   
        scanf(" %d", &array[i]);
    }
    largest = array[0];
    for (i = 1; i < size; i++) 
    {
        if (largest < array[i])
        largest = array[i];
    }
    printf("\n largest element present in the given array is : %d", largest);
    return 0;
 }

OUTPUT:
Enter the size of the array: 6
Enter 6 elements of the array: 
35
65
45
34
54
61
largest element present in the given array is : 65

3)
INPUT:
#include <math.h>
#include <stdio.h>
float calculateSD(float data[]);
int main() {
    int i;
    float data[10];
    printf("Enter 10 elements: ");
    for (i = 0; i < 10; ++i)
        scanf("%f", &data[i]);
    printf("\nStandard Deviation = %.6f", calculateSD(data));
    return 0;
}

float calculateSD(float data[]) {
    float sum = 0.0, mean, SD = 0.0;
    int i;
    for (i = 0; i < 10; ++i) {
        sum += data[i];
    }
    mean = sum / 10;
    for (i = 0; i < 10; ++i) {
        SD += pow(data[i] - mean, 2);
    }
    return sqrt(SD / 10);
}

OUTPUT:
Enter 10 elements: 1 12 3 4 5 6 7 8 9 10
Standard Deviation = 3.201562

4)
INPUT:
#include <stdio.h>
int main()
{
    int n, i;
    float num[100], sum = 0.0, avg;

    printf("Enter the numbers of elements: ");
    scanf("%d", &n);

    while (n > 100 || n < 1) 
    {
        printf("Error! number should in range of (1 to 100).\n");
        printf("Enter the number again: ");
        scanf("%d", &n);
    }

    for (i = 0; i < n; ++i) 
    {
        printf("%d. Enter number: ", i + 1);
        scanf("%f", &num[i]);
        sum += num[i];
    }

    avg = sum / n;
    printf("Average = %.2f", avg);
    return 0;
}

OUTPUT:
Enter the numbers of elements: 5
1. Enter number: 12
2. Enter number: 13
3. Enter number: 14
4. Enter number: 15
5. Enter number: 17
Average = 14.20

5)
INPUT:
#include <stdio.h>
const int CITY = 2;
const int WEEK = 7;
int main()
{
  int temperature[CITY][WEEK];

  // Using nested loop to store values in a 2d array
  for (int i = 0; i < CITY; ++i)
  {
    for (int j = 0; j < WEEK; ++j)
    {
      printf("City %d, Day %d: ", i + 1, j + 1);
      scanf("%d", &temperature[i][j]);
    }
  }
  printf("\nDisplaying values: \n\n");

  // Using nested loop to display vlues of a 2d array
  for (int i = 0; i < CITY; ++i)
  {
    for (int j = 0; j < WEEK; ++j)
    {
      printf("City %d, Day %d = %d\n", i + 1, j + 1, temperature[i][j]);
    }
  }
  return 0;
}

OUTPUT:
City 1, Day 1: 4
City 1, Day 2: 5
City 1, Day 3: 6
City 1, Day 4: 7
City 1, Day 5: 7
City 1, Day 6: 8
City 1, Day 7: 9
City 2, Day 1: 9
City 2, Day 2: 5
City 2, Day 3: 6
City 2, Day 4: 2
City 2, Day 5: 3
City 2, Day 6: 4
City 2, Day 7: 6
Displaying values: 

City 1, Day 1 = 4
City 1, Day 2 = 5
City 1, Day 3 = 6
City 1, Day 4 = 7
City 1, Day 5 = 7
City 1, Day 6 = 8
City 1, Day 7 = 9
City 2, Day 1 = 9
City 2, Day 2 = 5
City 2, Day 3 = 6
City 2, Day 4 = 2
City 2, Day 5 = 3
City 2, Day 6 = 4
City 2, Day 7 = 6

6)
INPUT:
#include <stdio.h>
int main() {
  int n;
  double arr[100];
  printf("Enter the number of elements (1 to 100): ");
  scanf("%d", &n);

  for (int i = 0; i < n; ++i) {
    printf("Enter number%d: ", i + 1);
    scanf("%lf", &arr[i]);
  }

  // storing the largest number to arr[0]
  for (int i = 1; i < n; ++i) {
    if (arr[0] < arr[i]) {
      arr[0] = arr[i];
    }
  }

  printf("Largest element = %.2lf", arr[0]);

  return 0;
}

OUTPUT:
Enter the number of elements (1 to 100): 5
Enter number1: 34.5
Enter number2: 2.4
Enter number3: -35.5
Enter number4: 38.7
Enter number5: 24.5
Largest element = 38.70

7)
INPUT:
#include <stdio.h>
int main() {
  int r, c, a[100][100], b[100][100], sum[100][100], i, j;
  printf("Enter the number of rows (between 1 and 100): ");
  scanf("%d", &r);
  printf("Enter the number of columns (between 1 and 100): ");
  scanf("%d", &c);

  printf("\nEnter elements of 1st matrix:\n");
  for (i = 0; i < r; ++i)
    for (j = 0; j < c; ++j) {
      printf("Enter element a%d%d: ", i + 1, j + 1);
      scanf("%d", &a[i][j]);
    }

  printf("Enter elements of 2nd matrix:\n");
  for (i = 0; i < r; ++i)
    for (j = 0; j < c; ++j) {
      printf("Enter element b%d%d: ", i + 1, j + 1);
      scanf("%d", &b[i][j]);
    }

  // adding two matrices
  for (i = 0; i < r; ++i)
    for (j = 0; j < c; ++j) {
      sum[i][j] = a[i][j] + b[i][j];
    }

  // printing the result
  printf("\nSum of two matrices: \n");
  for (i = 0; i < r; ++i)
    for (j = 0; j < c; ++j) {
      printf("%d   ", sum[i][j]);
      if (j == c - 1) {
        printf("\n\n");
      }
    }

  return 0;
}

OUTPUT:
Enter the number of rows (between 1 and 100): 2
Enter the number of columns (between 1 and 100): 3
Enter elements of 1st matrix:
Enter element a11: 2
Enter element a12: 3
Enter element a13: 4
Enter element a21: 5
Enter element a22: 2
Enter element a23: 3
Enter elements of 2nd matrix:
Enter element b11: -4
Enter element b12: 5
Enter element b13: 3
Enter element b21: 5
Enter element b22: 6
Enter element b23: 3

8)
INPUT:
#include <stdio.h>
int main() 
{
    int n, i;
    float num[100], sum = 0.0, avg;

    printf("Enter the numbers of elements: ");
    scanf("%d", &n);

    while (n > 100 || n < 1) {
        printf("Error! number should in range of (1 to 100).\n");
        printf("Enter the number again: ");
        scanf("%d", &n);
    }

    for (i = 0; i < n; ++i) {
        printf("%d. Enter number: ", i + 1);
        scanf("%f", &num[i]);
        sum += num[i];
    }

    avg = sum / n;
    printf("Average = %.2f", avg);
    return 0;
}

0UTPUT:
Enter the numbers of elements: 4
1. Enter number: 4
2. Enter number: 4
3. Enter number: 3
4. Enter number: 4
Average = 3.755

9)
INPUT:
#include <stdio.h>

int main() {

    int n1, n2, max;

    printf("Enter two positive integers: ");
    scanf("%d %d", &n1, &n2);

    // maximum number between n1 and n2 is stored in max
    max = (n1 > n2) ? n1 : n2;

    while (1) {
        if ((max % n1 == 0) && (max % n2 == 0)) {
            printf("The LCM of %d and %d is %d.", n1, n2, max);
            break;
        }
        ++max;
    }
    return 0;
}

0UTPUT:
Enter two positive integers: 6
6
6
The LCM of 6 and 6 is 6.6

10)
INPUT:
#include <stdio.h>

int main()
{
    char ch;

    printf("Enter any character: ");
    scanf("%c", &ch);


    if(ch >= 'A' && ch <= 'Z')
    {
        printf("'%c' is uppercase alphabet.", ch);
    }
    else if(ch >= 'a' && ch <= 'z')
    {
        printf("'%c' is lowercase alphabet.", ch);
    }
    else
    {
        printf("'%c' is not an alphabet.", ch);
    }

    return 0;
}

0UTPUT
Enter any character: 4
'4' is not an alphabet.3

11)
INPUT:
#include <stdio.h>
int main() {
    int num;
    printf("Enter an integer: ");
    scanf("%d", &num);

    // true if num is perfectly divisible by 2
    if(num % 2 == 0)
        printf("%d is even.", num);
    else
        printf("%d is odd.", num);
    
    return 0;
}

0UTPUT:
Enter an integer: 8
8 is even.7

12)
INPUT:
#include<stdio.h>  
int main()   
    {   
        float P , R , T , SI ;  
       P =34000; R =30;  T = 5;  
        SI  = (P*R*T)/100;   
        printf("\n\n Simple Interest is : %f", SI);  
        return (0);  
    } 

OUTPUT:
 Simple Interest is : 51000.0000008

13)
INPUT:
#include <stdio.h>
int main()
{
    int n1, n2, i, gcd;

    printf("Enter two integers: ");
    scanf("%d %d", &n1, &n2);

    for(i=1; i <= n1 && i <= n2; ++i)
    {
        // Checks if i is factor of both integers
        if(n1%i==0 && n2%i==0)
            gcd = i;
    }
printf("G.C.D of %d and %d is %d", n1, n2, gcd);
[8:23 am, 17/02/2023] Shreya Gitam: return 0;
}

OUTPUT:
Enter two integers: 52
3
G.C.D of 52 and 3 is 1

14) 
INPUT: 
#include <stdio.h>
int main()
{
    printf("Hello world");
    return 0;
}

OUTPUT:
Hello world


15)
INPUT:
#include <stdio.h>
int main()
{
    int num;
    printf("enter number:",num);
    scanf("%d",& num);
    if(num==0)
    printf("neither positive or nerative");
    else if (num>0)
    printf("positive");
    return 0;
}
OUT PUT 
 enter number:10
positive8
dash: 2: 8: not found


16)#include <stdio.h>
int main()
{
int sum=0,rem;
int num, rec;
printf("enter number;");
scanf("%d",&num);
rec = recfunction(num);
printf("the nummber after reverse ;%d",rec);
  return 0;
  }
  recfunction(int num)
  {
  if(num)
  {
 sum=num%10;
 sum=sum*10+rem;
 rec(num/10);
  }
  else
  return sum;
  }
17}#include<stdio.h>
int main()
{
    int count, first_term = 0, second_term = 1, next_term, i; 
    printf("Enter the number of terms:\n");
    scanf("%d",&count);
    printf("First %d terms of Fibonacci series:\n",count);
    for ( i = 0 ; i < count ; i++ )
    {
       if ( i <= 1 )
          next_term = i;
       else
       {
          next_term = first_term + second_term;
          first_term = second_term;
          second_term = next_term;
       }
       printf("%d\n",next_term);
    }
    return 0;
}
OUT PUT
Enter the number of terms:
 1
 1
First 1 terms of Fibonacci series:
0
2
dash: 2: 2: not found
2
dash: 3: 2: not found
3
dash: 4: 3: not found

18)
#include<stdio.h>
int main()
{
   int num, fact;
   printf("\nEnter any integer number:");
   scanf("%d",&num);
   fact =find_factorial(num);
   printf("\nfactorial of %d is: %d",num, fact);
   return 0;
}
int find_factorial(int n)
{
   if(n==0)
      return(1);
   return(n*find_factorial(n-1));
}

OUTPUT:
Enter any integer number: 4
factorial of 4 is: 24

19)
INPUT:
#include <stdio.h>
int main()
{
    int y;

    printf("Enter year: ");
    scanf("%d",&y);

    if(y % 4 == 0)
    {
        if( y % 100 == 0)
        {
            if ( y % 400 == 0)
                printf("%d is a Leap Year", y);
            else
                printf("%d is not a Leap Year", y);
        }
        else
            printf("%d is a Leap Year", y );
    }
    else
        printf("%d is not a Leap Year", y);

    return 0;
}

OUTPUT:
Enter year: 2004
2004 is a Leap Year

20)
INPUT:
include <stdio.h>
int main() {
  int number;
  printf("Enter an integer: ");
  scanf("%d", &number);
  printf("Integer entered by user: %d", number);

  return 0;
}

OUTPUT:
enter an integer: 9
Integer entered by user: 97

21)
INPUT:
#include <stdio.h>
 int main()
{
    int i, max_element;
    max_element = arr[0];
    for (i = 1; i < num; i++)         
        if (arr[i] > max_element)
            max_element = array;
    return max_element;
}
 
int main()
{
    int arr[] = {1, 24, 145, 20, 8, -101, 300};
    int n = sizeof(arr)/sizeof(arr[0]);
    printf("Largest element of array is %d", largest_element(arr, n));
    return 0;
}

OUTPUT:
Largest element of array is 300

22)
INPUT:
#include <stdio.h>
void swap(int *x,int *y)
{
    int t;
     t   = *x;
    *x   = *y;
    *y   =  t;
}

int main()
{
    int num1,num2;
    printf("Enter value of num1: ");
    scanf("%d",&num1);
    printf("Enter value of num2: ");
    scanf("%d",&num2);
    printf("Before Swapping: num1 is: %d, num2 is: %d\n",num1,num2);
    swap(&num1,&num2);
    printf("After  Swapping: num1 is: %d, num2 is: %d\n",num1,num2);
    return 0;
}

OUTPUT:
Enter value of num1: 9
Enter value of num2: 4
Before Swapping: num1 is: 9, num2 is: 4
After  Swapping: num1 is: 4, num2 is: 9

23)
INPUT:
#include <stdio.h>
void sort_numbers_ascending(int number[], int count)
{
   int temp, i, j, k;
   for (j = 0; j < count; ++j)
   {
      for (k = j + 1; k < count; ++k)
      {
         if (number[j] > number[k])
         {
            temp = number[j];
            number[j] = number[k];
            number[k] = temp;
         }
      }
   }
   printf("Numbers in ascending order:\n");
   for (i = 0; i < count; ++i)
      printf("%d\n", number[i]);
}
void main()
{
   int i, count, number[20];
   printf("How many numbers you are gonna enter:");
   scanf("%d", &count);
   printf("\nEnter the numbers one by one:");
   for (i = 0; i < count; ++i)
      scanf("%d", &number[i]);
   sort_numbers_ascending(number, count);
}

OUTPUT:
How many numbers you are gonna enter:4
Enter the numbers one by one:4
5
8
9
Numbers in ascending order:
4
5
8
9

24)
INPUT:
#include <stdio.h>
int main() {
  char ch[1000];
  FILE *fptr;
  if ((fptr = fopen("beginnersbook.txt", "r")) == NULL) {
    printf("Error! File does not exist.");
    exit(1);
  }
  fscanf(fptr, "%[^\n]", ch);
  printf("Data from the file:\n%s", ch);
  fclose(fptr);
  return 0;
} 

OUTPUT;

25)
INPUT:
#include <stdio.h>
int main()
{
  float Pi=3.14, area, circumference, radius;
  printf("Enter radius of circle: ");
  scanf("%f",&radius);
  area = Pi * radius * radius;
  printf("Area of circle is: %f\n",area);
  circumference = 2 * Pi * radius;
  printf("Circumference of circle is: %f",circumference);
  return 0;
}

OUTPUT:
Enter radius of circle: 2
Area of circle is: 12.560000
Circumference of circle is: 12.560000

26)
INPUT:
#include <stdio.h>

int main() {

  int n, reverse = 0, remainder;

  printf("Enter an integer: ");
  scanf("%d", &n);

  while (n != 0) {
    remainder = n % 10;
    reverse = reverse * 10 + remainder;
    n /= 10;
  }

  printf("Reversed number = %d", reverse);

  return 0;
}

OUTPUT;
Enter an integer: 2
Reversed number = 2

27)
INPUT:
#include <stdio.h>

int main() {

  int n, i, flag = 0;
  printf("Enter a positive integer: ");
  scanf("%d", &n);

  // 0 and 1 are not prime numbers
  // change flag to 1 for non-prime number
  if (n == 0 || n == 1)
    flag = 1;

  for (i = 2; i <= n / 2; ++i) {

    // if n is divisible by i, then n is not prime
    // change flag to 1 for non-prime number
    if (n % i == 0) {
      flag = 1;
      break;
    }
  }

  // flag is 0 for prime numbers
  if (flag == 0)
    printf("%d is a prime number.", n);
  else
    printf("%d is not a prime number.", n);

  return 0;
}

OUTPUT:
Enter a positive integer: 53
53 is a prime number.

28)
INPUT:
#include <stdio.h>
int main()
{
    int i, n, data, a[i];
    printf("\n Enter number of elements of an array:\n");
    scanf("%d", &n);
    printf("\n Enter elements:\n");
    for(i=0; i<n; i++)
    scanf("%d", &a[i]);
    printf("Enter data to search:");
    scanf("%d", &data);
    for(i=0; i<n; i++)
    if(a[i]==data)
    {
        printf("\n item found at %d", i);
        break;
    }
    if(i==n)
    printf("\n item does not exist:");
    return 0;
}

OUTPUT:
Enter number of elements of an array:
3
Enter elements:
23
44
67
Enter data to search:44
item found at 1

#include<stdio.h>    
#include<stdlib.h>  
int main()
{  
int a[10][10],b[10][10],mul[10][10],r,c,i,j,k;    
system("cls");  
printf("enter the number of row=");    
scanf("%d",&r);    
printf("enter the number of column=");    
scanf("%d",&c);    
printf("enter the first matrix element=\n");    
for(i=0;i<r;i++)    
{    
for(j=0;j<c;j++)    
{    
scanf("%d",&a[i][j]);    
}    
}    
printf("enter the second matrix element=\n");    
for(i=0;i<r;i++)    
{    
for(j=0;j<c;j++)    
{    
scanf("%d",&b[i][j]);    
}    
}    
    
printf("multiply of the matrix=\n");    
for(i=0;i<r;i++)    
{    
for(j=0;j<c;j++)    
{    
mul[i][j]=0;    
for(k=0;k<c;k++)    
{    
mul[i][j]+=a[i][k]*b[k][j];    
}    
}    
}    
for(i=0;i<r;i++)    
{    
for(j=0;j<c;j++)    
{    
printf("%d\t",mul[i][j]);    
}    
printf("\n");    
}    
return 0;  
}  

enter the number of row=3
enter the number of column=3
enter the first matrix element=
1 1 1
2 2 2
3 3 3
enter the second matrix element=
3 3 3
2 2 2
1 1 1
multiply of the matrix=
6	6	6	
12	12	12	
18	18	18	

#include <stdio.h>
int main() 
{
  int r, c, a[3][3], b[3][3], sum[3][3], i, j;
  printf("Enter the number of rows : ");
  scanf("%d", &r);
  printf("Enter the number of columns : ");
  scanf("%d", &c);

  printf("\nEnter elements of 1st matrix:\n");
  for (i = 0; i < r; ++i)
    for (j = 0; j < c; ++j) 
    {
      printf("Enter element a%d%d: ", i + 1, j + 1);
      scanf("%d", &a[i][j]);
    }

  printf("Enter elements of 2nd matrix:\n");
  for (i = 0; i < r; ++i)
    for (j = 0; j < c; ++j) 
    {
      printf("Enter element b%d%d: ", i + 1, j + 1);
      scanf("%d", &b[i][j]);
    }
  for (i = 0; i < r; ++i)
    for (j = 0; j < c; ++j) 
    {
      sum[i][j] = a[i][j] + b[i][j];
    }

  printf("\nSum of two matrices: \n");
  for (i = 0; i < r; ++i)
    for (j = 0; j < c; ++j) 
    {
      printf("%d   ", sum[i][j]);
      if (j == c - 1) 
      {
        printf("\n\n");
      }
    }
  return 0;
}
Enter the number of rows : 3
Enter the number of columns : 3
Enter elements of 1st matrix:
Enter element a11: 2
Enter element a12: 4
Enter element a13: 6
Enter element a21: 3
Enter element a22: 5
Enter element a23: 7
Enter element a31: 1
Enter element a32: 3
Enter element a33: 5
Enter elements of 2nd matrix:
Enter element b11: 9
Enter element b12: 7
Enter element b13: 5
Enter element b21: 0
Enter element b22: 8
Enter element b23: 6
Enter element b31: 4
Enter element b32: 5
Enter element b33: 6
Sum of two matrices: 
11   11   11   

3   13   13   

5   8   11   





